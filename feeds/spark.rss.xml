<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>guozhongxin's blog</title><link>http://www.guozhongxin.com/</link><description></description><atom:link href="http://www.guozhongxin.com/feeds/spark.rss.xml" rel="self"></atom:link><lastBuildDate>Sun, 25 Jan 2015 21:00:00 +0800</lastBuildDate><item><title>Spark DAGScheduler模块源码解析</title><link>http://www.guozhongxin.com/pages/2015/01/25/spark_dagscheduler.html</link><description>&lt;h2&gt;Spark DAGScheduler的背景知识&lt;/h2&gt;
&lt;p&gt;Spark Application在遇到action算子时，SparkContext会生成Job，并将构成DAG图将给DAG Scheduler解析成Stage。&lt;/p&gt;
&lt;h3&gt;Stage&lt;/h3&gt;
&lt;p&gt;Stage是Spark对DAG的划分，以此作为对作业的进行任务（task）划分和调度的依据。&lt;br /&gt;
可以这样理解Stage不需要shuffle是可以随意并发的, 所以stage的边界就是需要shuffle的地方。&lt;/p&gt;
&lt;p&gt;下图是一个stage例子。
&lt;img alt="3" src="http://www.guozhongxin.com/images/stage.png" /&gt; &lt;/p&gt;
&lt;p&gt;Stage有两种： &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ShuffleMapStage&lt;br /&gt;
  这种Stage是以Shuffle为输出边界，其输入边界可以是从外部获取数据，也可以是另一个ShuffleMapStage的输出，其输出可以。是另一个Stage的开始ShuffleMapStage的最后Task就是ShuffleMapTask。在一个Job里可能有该类型的Stage，也可以能没有该类型Stage。&lt;br /&gt;
  上图Stage 1，Stage 2都属于ShuffleMapStage&lt;/li&gt;
&lt;li&gt;ResultStage&lt;br /&gt;
  这种Stage是直接输出结果。其输入边界可以是从外部获取数据，也可以是另一个ShuffleMapStage的输出。ResultStage的最后Task就是ResultTask。在一个Job里必定有该类型Stage。一个Job含有一个或多个Stage，但至少含有一个ResultStage。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;DAGScheduler&lt;/h3&gt;
&lt;p&gt;DAGScheduler主要功能如下：  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接收用户提交的job;&lt;/li&gt;
&lt;li&gt;将job根据类型划分为不同的stage，记录哪些RDD、Stage被物化，并在每一个stage内产生一系列的task，并封装成TaskSet；&lt;/li&gt;
&lt;li&gt;决定每个Task的最佳位置(任务在数据所在的节点上运行)，并结合当前的缓存情况；将TaskSet提交给TaskScheduler;&lt;/li&gt;
&lt;li&gt;重新提交Shuffle输出丢失的Stage给TaskScheduler；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注：一个Stage内部的错误不是由shuffle输出丢失造成的，DAGScheduler是不管的，由TaskScheduler负责尝试重新提交task执行；&lt;/p&gt;
&lt;h2&gt;Spark DAGScheduler源码解析&lt;/h2&gt;
&lt;p&gt;DAGScheduler的创建是在用户定义一个新的&lt;code&gt;SparkContext&lt;/code&gt;时进行的。（需要注意的是，在SparkContext中，TaskSchduler是在DAGScheduler之前生成的，即&lt;code&gt;dagScheduler = new DAGScheduler(this)&lt;/code&gt;中的this.taskScheduler已经被生成，这个taskScheduler也是dagScheduler的一个成员变量）&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;1&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;@volatile&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;private&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;spark&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;var&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;dagScheduler&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;DAGScheduler&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;2&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;try&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;3&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;dagScheduler&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;DAGScheduler&lt;/span&gt;(&lt;span style="color: rgb(227, 206, 171);"&gt;this&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;4&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;catch&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;5&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Exception&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;throw&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;6&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;SparkException&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;DAGScheduler cannot be initialized due to %s&amp;quot;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;format&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;getMessage&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;7&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;当执行&lt;code&gt;输出算子&lt;/code&gt;的时候，spark会调用&lt;code&gt;sc.runJob()&lt;/code&gt;方法，例如&lt;code&gt;RDD.scala&lt;/code&gt;中定义的&lt;code&gt;count()&lt;/code&gt;:  &lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;1&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;count&lt;/span&gt;()&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Long&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;sc&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;runJob&lt;/span&gt;(&lt;span style="color: rgb(227, 206, 171);"&gt;this&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Utils&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;getIteratorSize&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;).&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;sum&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;跟进到&lt;code&gt;SparkContext.scala&lt;/code&gt;中的&lt;code&gt;runJob()&lt;/code&gt;方法，可以看到：  &lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;01&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;runJob&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;T&lt;/span&gt;, &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;U:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;ClassTag&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;](&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;02&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;T&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;],&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;03&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; (&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;TaskContext&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Iterator&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;T&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;])&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;U&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;04&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Seq&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;],&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;05&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Boolean&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;06&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;resultHandler&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; (&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;U&lt;/span&gt;) &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Unit&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;07&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(204, 120, 51);"&gt;dagScheduler&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;==&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;null&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;08&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;throw&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;SparkException&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;SparkContext has been shutdown&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;09&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;10&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getCallSite&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;11&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;cleanedFunc&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;clean&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;12&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Starting job: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;shortForm&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;13&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;start&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;System&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;nanoTime&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;14&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(204, 120, 51);"&gt;dagScheduler&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;runJob&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;cleanedFunc&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;15&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;resultHandler&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;localProperties&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;get&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;16&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;17&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Job finished: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;shortForm&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;, took &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;System&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;nanoTime&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;-&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;start&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;/&lt;/span&gt; &lt;span style="color: rgb(140, 208, 211);"&gt;1&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;e9&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot; s&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;18&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;doCheckpoint&lt;/span&gt;()&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;19&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;sc.runJob()&lt;/code&gt;是调用的&lt;code&gt;dagScheduler.runJob()&lt;/code&gt;方法。跟进到&lt;code&gt;DAGScheduler.runJob()&lt;/code&gt;&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;01&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;runJob&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;T&lt;/span&gt;, &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;U:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;ClassTag&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;](&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;02&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;T&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;],&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;03&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; (&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;TaskContext&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Iterator&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;T&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;])&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;U&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;04&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Seq&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;],&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;05&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;CallSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;06&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Boolean&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;07&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;resultHandler&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; (&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;U&lt;/span&gt;) &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Unit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;08&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Properties&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;null&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;09&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;10&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;start&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;System&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;nanoTime&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;11&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;waiter&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(204, 120, 51);"&gt;submitJob&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;resultHandler&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;12&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;waiter&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;awaitResult&lt;/span&gt;() &lt;span style="color: rgb(227, 206, 171);"&gt;match&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;13&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;JobSucceeded&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;14&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Job %d finished: %s, took %f s&amp;quot;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;format&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;15&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span style="color: rgb(220, 220, 204);"&gt;waiter&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;shortForm&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;System&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;nanoTime&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;-&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;start&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;/&lt;/span&gt; &lt;span style="color: rgb(140, 208, 211);"&gt;1&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;e9&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;16&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;17&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;JobFailed&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;exception&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Exception&lt;/span&gt;) &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;18&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Job %d failed: %s, took %f s&amp;quot;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;format&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;19&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;span style="color: rgb(220, 220, 204);"&gt;waiter&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;shortForm&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;System&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;nanoTime&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;-&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;start&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;/&lt;/span&gt; &lt;span style="color: rgb(140, 208, 211);"&gt;1&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;e9&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;20&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;throw&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;exception&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;21&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;22&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;当job被正常提交时，&lt;code&gt;submitJob()&lt;/code&gt;返回一个&lt;code&gt;JobWaiter&lt;/code&gt;的类，并产生一个&lt;strong&gt;&lt;code&gt;JobSubmitted&lt;/code&gt;&lt;/strong&gt;的&lt;code&gt;event&lt;/code&gt;（事件）&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;1&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;waiter&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;JobWaiter&lt;/span&gt;(&lt;span style="color: rgb(227, 206, 171);"&gt;this&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;size&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;resultHandler&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;2&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;eventProcessActor&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;!&lt;/span&gt; &lt;span style="color: rgb(204, 120, 51);"&gt;JobSubmitted&lt;/span&gt;(&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;3&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;func2&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;toArray&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;waiter&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;4&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;waiter&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;DAGScheduler是一个&lt;strong&gt;生产者-消费者模型&lt;/strong&gt;。在DAGScheduler的实例&lt;code&gt;dagScheduler&lt;/code&gt;在SparkContext中被创建时，&lt;code&gt;dagScheduler&lt;/code&gt;初始化了一个守候进程，用来对DAGScheduler中的各种事件进行相应。&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;1&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;private&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;initializeEventProcessActor&lt;/span&gt;() &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;2&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// blocking the thread until supervisor is started, which ensures eventProcessActor is&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;3&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// not null before any job is submitted&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;4&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;implicit&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;timeout&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Timeout&lt;/span&gt;(&lt;span style="color: rgb(140, 208, 211);"&gt;30&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;seconds&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;5&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;initEventActorReply&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;6&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;dagSchedulerActorSupervisor&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;?&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Props&lt;/span&gt;(&lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(204, 120, 51);"&gt;DAGSchedulerEventProcessActor&lt;/span&gt;(&lt;span style="color: rgb(227, 206, 171);"&gt;this&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;7&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(204, 120, 51);"&gt;eventProcessActor&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Await&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;result&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;initEventActorReply&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;timeout&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;duration&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;).&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;8&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;asInstanceOf&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;ActorRef&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;9&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;DAGSchedulerEventProcessActor&lt;/code&gt;这个class在DAGScheduler.scala中被定义，用来接受并处理DAGScheduler工作时产生的各种事件&lt;code&gt;event&lt;/code&gt;,处理的方法是调用传入的&lt;code&gt;dagScheduler&lt;/code&gt;中的方法。&lt;code&gt;DAGSchedulerEventProcessActor&lt;/code&gt;处理的事件有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;JobSubmitted&lt;/li&gt;
&lt;li&gt;StageCancelled&lt;/li&gt;
&lt;li&gt;JobCancelled&lt;/li&gt;
&lt;li&gt;JobGroupCancelled&lt;/li&gt;
&lt;li&gt;AllJobsCancelled&lt;/li&gt;
&lt;li&gt;ExecutorAdded&lt;/li&gt;
&lt;li&gt;ExecutorLost&lt;/li&gt;
&lt;li&gt;BeginEvent&lt;/li&gt;
&lt;li&gt;GettingResultEvent&lt;/li&gt;
&lt;li&gt;CompletionEvent&lt;/li&gt;
&lt;li&gt;ResubmitFailedStages&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以&lt;code&gt;JobSubmitted&lt;/code&gt;事件为例：&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;1&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;JobSubmitted&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;listener&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;) &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;2&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(204, 120, 51);"&gt;dagScheduler&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;handleJobSubmitted&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;3&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;listener&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;)&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;code&gt;dagScheduler.handleJobSubmitted&lt;/code&gt;将接收到finalRDD的依赖关系解析出来，生成stages，即整个DAG的结构，再调用函数将stage内的tasks打包成TaskSet,交给taskScheduler处理。跟着这个方法，&lt;code&gt;handleJobSubmitted&lt;/code&gt;，就可以了解DAGScheduler的主要功能和实现原理。&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;01&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;private&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;scheduler&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;handleJobSubmitted&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;02&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;finalRDD&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;],&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;03&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; (&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;TaskContext&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Iterator&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;])&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;04&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Array&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;],&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;05&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Boolean&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;06&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;CallSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;07&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;listener&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;JobListener&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;08&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Properties&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;null&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;09&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;10&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;var&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;null&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;11&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;try&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;12&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// New stage creation may throw an exception if, for example, jobs are run on a&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;13&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// HadoopRDD whose underlying HDFS files have been deleted.&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;14&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;newStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;finalRDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;size&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;None&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;15&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;catch&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;16&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Exception&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;17&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logWarning&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Creating new stage failed due to exception - job: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;18&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;listener&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobFailed&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;19&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;return&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;20&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;21&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;!=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;null&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;22&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;ActiveJob&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;func&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;listener&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;23&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;clearCacheLocs&lt;/span&gt;()&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;24&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Got job %s (%s) with %d output partitions (allowLocal=%s)&amp;quot;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;format&lt;/span&gt;(&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;25&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;callSite&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;shortForm&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;length&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;26&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Final stage: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;name&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;27&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Parents of final stage: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;parents&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;28&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Missing parents: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getMissingParentStages&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;29&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;shouldRunLocally&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;30&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;localExecutionEnabled&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;allowLocal&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;parents&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;isEmpty&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;length&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;==&lt;/span&gt; &lt;span style="color: rgb(140, 208, 211);"&gt;1&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;31&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;shouldRunLocally&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;32&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// Compute very short actions like first() or take() with no parent stages locally.&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;33&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;listenerBus&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;post&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;SparkListenerJobStart&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Seq&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;empty&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;34&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;runLocally&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;35&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;else&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;36&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;jobIdToActiveJob&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;) &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;37&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;activeJobs&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;38&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;resultOfJob&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Some&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;39&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stageIds&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobIdToStageIds&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;).&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;toArray&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;40&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stageInfos&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stageIds&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;flatMap&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stageIdToStage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;get&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;).&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;map&lt;/span&gt;(&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;latestInfo&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;41&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;listenerBus&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;post&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;SparkListenerJobStart&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stageInfos&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;42&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;submitStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;finalStage&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;43&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;44&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;45&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;submitWaitingStages&lt;/span&gt;()&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;46&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;可以看出，DAGScheduler生成stage，是通过最后一个RDD推算出来的，（这个RDD通过&lt;code&gt;sc.runJob()&lt;/code&gt; -&amp;gt; &lt;code&gt;dagScheduler.runJob()&lt;/code&gt; -&amp;gt; &lt;code&gt;dagScheduler.submitJob()&lt;/code&gt; -&amp;gt; &lt;code&gt;JobSubmitted()&lt;/code&gt; -&amp;gt; &lt;code&gt;dagScheduler.handleJobSubmitted()&lt;/code&gt; 层层调用传进来的）&lt;/p&gt;
&lt;p&gt;这一行代码，&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;finalStage = newStage(finalRDD, partitions.size, None, jobId, callSite)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;通过调用&lt;code&gt;newStage()&lt;/code&gt;方法，生成了&lt;strong&gt;finalStage&lt;/strong&gt;。实际上，&lt;code&gt;newStage()&lt;/code&gt;中调用了&lt;code&gt;getParentStages()&lt;/code&gt;方法，由finalRDD向前追溯，生成了parentStages。&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;01&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;private&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getParentStages&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;],&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;)&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;List&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;02&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;parents&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;HashSet&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;03&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;visited&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;HashSet&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;04&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// We are manually maintaining a stack here to prevent StackOverflowError&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;05&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// caused by recursively visiting&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;06&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Stack&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;07&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;visit&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;r&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;])&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;08&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;(!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;visited&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;r&lt;/span&gt;)) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;09&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;visited&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;r&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;10&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// Kind of ugly: need to register RDDs with the cache here since&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;11&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// we can&amp;#39;t do it in its constructor because # of partitions is unknown&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;12&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;for&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;dep&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;&amp;lt;-&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;r&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;dependencies&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;13&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;dep&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;match&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;14&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;shufDep&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;ShuffleDependency&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;, &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;, &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;15&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;parents&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getShuffleMapStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;shufDep&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;16&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;17&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;push&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;dep&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;18&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;19&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;20&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;21&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;22&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;push&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;23&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;while&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;(!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;isEmpty&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;24&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;visit&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;pop&lt;/span&gt;())&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;25&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;26&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;parents&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;toList&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;27&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;回到&lt;code&gt;handleJobSubmitted()&lt;/code&gt;,看到27、28两行，一个是&lt;em&gt;"Parents of final stage: "&lt;/em&gt;，这个是由&lt;strong&gt;getParentStages（）&lt;/strong&gt;方法获取的，而&lt;em&gt;"Missing parents: "&lt;/em&gt;，是由&lt;strong&gt;getMissingParentStages&lt;/strong&gt;获取的，在这里(handleJobSubmitted()),两者没有什么不同。但是在其他地方，调用两个函数还是会有不同效果。&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;01 &lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;private&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getMissingParentStages&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt;)&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;List&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;02 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;missing&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;HashSet&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;03 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;visited&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;HashSet&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;04 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// We are manually maintaining a stack here to prevent StackOverflowError&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;05 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// caused by recursively visiting&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;06 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Stack&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]]&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;07 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;visit&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;RDD&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;])&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;08 &lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;(!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;visited&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;)) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;09 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;visited&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;10 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;getCacheLocs&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;).&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;contains&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;Nil&lt;/span&gt;)) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;11 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;for&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;dep&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;&amp;lt;-&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;dependencies&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;12 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;dep&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;match&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;13 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;shufDep&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;ShuffleDependency&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;, &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;, &lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;14 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;mapStage&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getShuffleMapStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;shufDep&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;15 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;(!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;mapStage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;isAvailable&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;16 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;missing&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;mapStage&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;17 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;18 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;narrowDep&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;NarrowDependency&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;19 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;push&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;narrowDep&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;20 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;21 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;22 &lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;23 &lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;24 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;25 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;push&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;26 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;while&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;(!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;isEmpty&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;27 &lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;visit&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;waitingForVisit&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;pop&lt;/span&gt;())&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;28 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;29 &lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;missing&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;toList&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;30 &lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;由以上的代码可以看出，&lt;code&gt;getMissingParentStages()&lt;/code&gt;与&lt;code&gt;getParentStages()&lt;/code&gt;在第15、16行。&lt;/p&gt;
&lt;p&gt;回到&lt;code&gt;handleJobSubmitted()&lt;/code&gt;41、42行，DAGScheduler向监听总线发生一个JobStart的事件，之后，调用&lt;code&gt;submitStage()&lt;/code&gt;将生成的Stage提交&lt;/p&gt;
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;01&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;/** Submits stage, but first recursively submits any missing parents. */&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;02&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;private&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;submitStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;03&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;activeJobForStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;04&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;isDefined&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;05&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logDebug&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;submitStage(&amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;06&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;(!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingStages&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;runningStages&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;!&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;failedStages&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;)) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;07&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;missing&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getMissingParentStages&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;).&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;sortBy&lt;/span&gt;(&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;08&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logDebug&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;missing: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;missing&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;09&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;missing&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;==&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Nil&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;10&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Submitting &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot; (&amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;), which has no missing parents&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;11&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(204, 120, 51);"&gt;submitMissingTasks&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;get&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;12&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;else&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;13&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;for&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;parent&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;&amp;lt;-&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;missing&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;14&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;submitStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;parent&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;15&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;16&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;waitingStages&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;17&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;18&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;19&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;else&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;20&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;abortStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;No active job for stage &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;21&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;22&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;p&gt;在&lt;code&gt;submitMissingTasks()&lt;/code&gt;中，DAGScheduler将stage中的tasks进行拆分，并将tasks打包成TaskSet，交给TaskScheduler处理。
&lt;div class="source" style="font-family: Monaco, Consolas, 'Lucida Console', 'Courier New'; color: rgb(220, 220, 204); background-color: rgb(63, 63, 63);"&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;01&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;/*&lt;em&gt; Called when stage&amp;#39;s parents are available and we can now do its task. &lt;/em&gt;/&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;02&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;private&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;def&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;submitMissingTasks&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;03&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logDebug&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;submitMissingTasks(&amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;04&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// Get our pending tasks and remember them in our pendingTasks entry&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;05&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;pendingTasks&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;clear&lt;/span&gt;()&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;06&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;07&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;····&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;08&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;09&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(204, 120, 51);"&gt;tasks&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Seq&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Task&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;[&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;_&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;]]&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;isShuffleMap&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;10&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;partitionsToCompute&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;map&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;11&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;locs&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getPreferredLocs&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;12&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;part&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;13&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;ShuffleMapTask&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;taskBinary&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;part&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;locs&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;14&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;15&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;else&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;16&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;resultOfJob&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;get&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;17&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;partitionsToCompute&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;map&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;18&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; p&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;Int&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;job&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;19&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;part&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;partitions&lt;/span&gt;(p)&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;20&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;val&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;locs&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;getPreferredLocs&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; p)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;21&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;ResultTask&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;taskBinary&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;part&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;locs&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;22&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;23&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;24&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;25&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;if&lt;/span&gt; (&lt;span style="color: rgb(220, 220, 204);"&gt;tasks&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;size&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(140, 208, 211);"&gt;0&lt;/span&gt;) &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;26&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// Preemptively serialize a task to make sure it can be serialized. &lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;27&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;try&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;28&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;closureSerializer&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;serialize&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;tasks&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;head&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;29&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;catch&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;30&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;&lt;span style="color: rgb(227, 206, 171);"&gt;:&lt;/span&gt; &lt;span style="color: rgb(223, 223, 191); font-weight: bold;"&gt;NotSerializableException&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;=&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;31&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;abortStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Task not serializable: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;toString&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;32&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;runningStages&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;-=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;33&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;return&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;34&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;case&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;NonFatal&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;e&lt;/span&gt;) &lt;span style="color: rgb(227, 206, 171);"&gt;=&amp;gt;&lt;/span&gt; &lt;span style="color: rgb(127, 159, 127);"&gt;// Other exceptions, such as IllegalArgumentException from Kryo.&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;35&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;abortStage&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; s&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Task serialization failed: $e\n${e.getStackTraceString}&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;36&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;runningStages&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;-=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;37&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;return&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;38&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;39&amp;nbsp;&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;40&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logInfo&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Submitting &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;tasks&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;size&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot; missing tasks from &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot; (&amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;rdd&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;)&amp;quot;&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;41&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;pendingTasks&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;++=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;tasks&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;42&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logDebug&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;New pending tasks: &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;pendingTasks&lt;/span&gt;)&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;43&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(204, 120, 51);"&gt;taskScheduler&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;submitTasks&lt;/span&gt;(&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;44&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(227, 206, 171);"&gt;new&lt;/span&gt; &lt;span style="color: rgb(204, 120, 51);"&gt;TaskSet&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;tasks&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;toArray&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;id&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;newAttemptId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;(),&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;jobId&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;properties&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;45&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;latestInfo&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;submissionTime&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;Some&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;clock&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;getTime&lt;/span&gt;())&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;46&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt; &lt;span style="color: rgb(227, 206, 171);"&gt;else&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;{&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;47&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// Because we posted SparkListenerStageSubmitted earlier, we should post&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;48&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(127, 159, 127);"&gt;// SparkListenerStageCompleted here in case there are no tasks to run.&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;49&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;listenerBus&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;post&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;SparkListenerStageCompleted&lt;/span&gt;(&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;latestInfo&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(248, 16, 176);"&gt;50&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;logDebug&lt;/span&gt;(&lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot;Stage &amp;quot;&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;+&lt;/span&gt; &lt;span style="color: rgb(204, 147, 147);"&gt;&amp;quot; is actually done; %b %d %d&amp;quot;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;format&lt;/span&gt;(&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;51&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;isAvailable&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;numAvailableOutputs&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;,&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;.&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;numPartitions&lt;/span&gt;))&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;52&amp;nbsp;&lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;runningStages&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;-=&lt;/span&gt; &lt;span style="color: rgb(220, 220, 204);"&gt;stage&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;53&amp;nbsp;&lt;/span&gt; &amp;nbsp;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;span style="color: rgb(127, 159, 127);"&gt;54&amp;nbsp;&lt;/span&gt;&lt;span style="color: rgb(220, 220, 204);"&gt;}&lt;/span&gt;&lt;br&gt;&lt;/div&gt;&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;接下来的工作，就交给TaskScheduler解决了。&lt;/p&gt;
&lt;p&gt;有时间再整理一下吧&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">guozhongxin</dc:creator><pubDate>Sun, 25 Jan 2015 21:00:00 +0800</pubDate><guid>tag:www.guozhongxin.com,2015-01-25:pages/2015/01/25/spark_dagscheduler.html</guid><category>spark</category><category>source code</category><category></category></item><item><title>spark配置与性能分析</title><link>http://www.guozhongxin.com/pages/2015/01/18/spark_performance.html</link><description>&lt;h2&gt;instance&lt;/h2&gt;
&lt;h2&gt;akka timeout&lt;/h2&gt;
&lt;h2&gt;&lt;/h2&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">guozhongxin</dc:creator><pubDate>Sun, 18 Jan 2015 22:00:00 +0800</pubDate><guid>tag:www.guozhongxin.com,2015-01-18:pages/2015/01/18/spark_performance.html</guid><category>spark</category><category></category></item><item><title>Spark使用及调优心得</title><link>http://www.guozhongxin.com/pages/2014/10/16/spark_experience.html</link><description>&lt;h3&gt;pending...&lt;/h3&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">guozhongxin</dc:creator><pubDate>Thu, 16 Oct 2014 00:00:00 +0800</pubDate><guid>tag:www.guozhongxin.com,2014-10-16:pages/2014/10/16/spark_experience.html</guid><category>spark</category><category></category></item><item><title>Windows + IDEA + SBT 打造Spark源码阅读环境</title><link>http://www.guozhongxin.com/pages/2014/10/15/spark_source_code.html</link><description>&lt;h2&gt;Spark源码阅读环境的准备&lt;/h2&gt;
&lt;p&gt;Spark源码是有Scala语言写成的，目前，&lt;a href="/http://www.jetbrains.com/idea/"&gt;IDEA&lt;/a&gt;对Scala的支持要比eclipse要好，大多数人会选在在IDEA上完成Spark平台应用的开发。因此，Spark源码阅读的IDE理所当然的选择了IDEA。&lt;/p&gt;
&lt;p&gt;本文介绍的是Windows下的各项配置方法（默认已经装了java，JDK）。&lt;/p&gt;
&lt;p&gt;下面列举搭建此环境需要的各个组件：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.jetbrains.com/idea/download/"&gt;&lt;strong&gt;IDEA&lt;/strong&gt;&lt;/a&gt;，有两个版本：Ultimate Edition &amp;amp; Community Edition，后者是free的，而且完全能满足学习者所有的需求  &lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.scala-lang.org/download/"&gt;&lt;strong&gt;Scala&lt;/strong&gt;&lt;/a&gt;，Spark是用Scala语言写成的，在本地编译执行需要这个包&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.scala-sbt.org/download.html"&gt;&lt;strong&gt;SBT&lt;/strong&gt;&lt;/a&gt;，scala工程构建的工具&lt;/li&gt;
&lt;li&gt;&lt;a href="http://git-scm.com/download/"&gt;&lt;strong&gt;Git&lt;/strong&gt;&lt;/a&gt;，IDEA自动下载SBT插件时可能会用到的工具&lt;/li&gt;
&lt;li&gt;&lt;a href="http://spark.apache.org/downloads.html"&gt;&lt;strong&gt;Spark Source Code&lt;/strong&gt;&lt;/a&gt;，Spark源码&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;下载各个安装包。&lt;/p&gt;
&lt;h2&gt;Spark源码阅读环境的安装步骤&lt;/h2&gt;
&lt;h4&gt;安装&lt;a href="http://www.scala-lang.org/download/"&gt;Scala&lt;/a&gt;。&lt;/h4&gt;
&lt;p&gt;完成后，在windows命令行中输入&lt;code&gt;scala&lt;/code&gt;，检查是否识别此命令。&lt;br /&gt;
如果不识别，查看环境变量Path中是否有&lt;code&gt;....\scala\bin&lt;/code&gt;（我的电脑右键，属性 -&amp;gt; 高级系统设置 -&amp;gt; 环境变量）,没有的手动将Scala文件夹下的bin目录的路径&lt;/p&gt;
&lt;h4&gt;安装&lt;a href="http://www.scala-sbt.org/download.html"&gt;SBT&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;运行SBT的安装程序，运行完成后，重新打开windows命令行，输入&lt;code&gt;sbt&lt;/code&gt;，检查是否识别此命令。没有的话，手动配置环境变量，添加&lt;code&gt;...\sbt\bin&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;运行完SBT的安装程序之后，并不意味着完成了sbt的安装，在windows命令放下输入&lt;code&gt;sbt&lt;/code&gt;后，SBT会自动的下载安装它所需要的程序包，请耐心等待全部下载成功。&lt;/p&gt;
&lt;h4&gt;安装&lt;a href="http://git-scm.com/download/"&gt;Git&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;运行Git的安装程序，安装完成后，重新打开windows命令行，检查时候识别&lt;code&gt;git&lt;/code&gt;命令。&lt;/p&gt;
&lt;h4&gt;安装&lt;a href="http://www.jetbrains.com/idea/download/"&gt;IDEA&lt;/a&gt;&lt;/h4&gt;
&lt;h4&gt;安装IDEA的Scala插件&lt;/h4&gt;
&lt;p&gt;打开IDEA，在‘Welcome to IntelliJ IDEA’界面的‘Quick Start’栏，点击&lt;code&gt;Configure&lt;/code&gt;，选择&lt;code&gt;Plugins&lt;/code&gt;。  &lt;/p&gt;
&lt;p&gt;在弹出的窗口中可以看到已安装的插件，现在IDEA默认还没有Scala的插件。需要点击左下角的&lt;code&gt;Install JetBrains plugin...&lt;/code&gt;，在搜索框中输入‘scala’，点击安装。安装完成后可能会要求重启一下IDEA。&lt;/p&gt;
&lt;h4&gt;解压缩Spark Source Code包&lt;/h4&gt;
&lt;h2&gt;导入Spark工程&lt;/h2&gt;
&lt;p&gt;在欢迎界面‘Quick Start’栏或者是在主界面的菜单栏&lt;code&gt;File&lt;/code&gt;下，选&lt;code&gt;Import Project&lt;/code&gt;，找到解压之后的spark工程文件夹，&lt;code&gt;OK&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;import project from external model&lt;/code&gt;中的&lt;code&gt;SBT project&lt;/code&gt;，（这个选项只有在安装了IDEA的Scala插件才会有）。&lt;/p&gt;
&lt;p&gt;下一步，选择Project SDK为JDK，最好勾上&lt;code&gt;Use auto-import&lt;/code&gt;，然后点击&lt;code&gt;Finish&lt;/code&gt;。这时，&lt;strong&gt;IDEA会自动下载安装SBT所需的各个包&lt;/strong&gt;，没有装Git的话可能会报错。&lt;/p&gt;
&lt;p&gt;因为Spark是一个比较大的工程，所需的包也很多，这个过程也会特别慢，请耐心等待。&lt;/p&gt;
&lt;h4&gt;导入完成&lt;/h4&gt;
&lt;p&gt;导入完成后，自动打开工程，要等一段时间，等待sbt对这个工程进行编译。&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">guozhongxin</dc:creator><pubDate>Wed, 15 Oct 2014 11:00:00 +0800</pubDate><guid>tag:www.guozhongxin.com,2014-10-15:pages/2014/10/15/spark_source_code.html</guid><category>spark</category><category>源码</category></item><item><title>Spark安装：Spark集群及开发环境搭建</title><link>http://www.guozhongxin.com/pages/2014/09/26/spark_installation.html</link><description>&lt;h2&gt;安装Spark准备&lt;/h2&gt;
&lt;p&gt;在准备安装spark之前，需要准备以下安装包，并完成以下预备动作。  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;scala安装包，可以在&lt;a href="http://www.scala-lang.org/"&gt;scala官方网站&lt;/a&gt;下载&lt;/li&gt;
&lt;li&gt;spark安装包，可以在&lt;a href="http://spark.apache.org/downloads.html"&gt;spark官网&lt;/a&gt;下载，用两种形式的安装包：&lt;ul&gt;
&lt;li&gt;source code package&lt;/li&gt;
&lt;li&gt;pre-build package&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;在主节点实现ssh免密码登陆其他节点。  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;install scala - scala安装&lt;/h3&gt;
&lt;p&gt;download scala-2.10.4.tgz and unzip： &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;zxf&lt;/span&gt; &lt;span class="n"&gt;scala&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.10.4&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tgz&lt;/span&gt;
&lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
    &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SCALA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;   
    &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SCALA_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;install spark. - spark安装&lt;/h3&gt;
&lt;p&gt;There are two types of spark installation package, source package that you need build spark at first, and prebuild package.  &lt;/p&gt;
&lt;p&gt;Spark的安装包有两种形式：源码包（用户需要自己下载后在平台上编译），以及已经编译打包好的安装包&lt;/p&gt;
&lt;p&gt;To build source package, you should unzip the package and edit pom.xml in the directory, change &lt;hadoop.version&gt;&lt;/hadoop.version&gt; and some jars' version: protobuf, hbase, hive. Then, you can run this command :    &lt;/p&gt;
&lt;p&gt;在用源码包安装时，你需要先解压缩安装包，然后修改文件夹中中pom.xml文件，将hadoop、protobuf、hbase、hive的版本号修改为当前环境的版本。之后在这个文件夹下运行这条命令：  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;make&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;distribution&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;hadoop&lt;/span&gt; &lt;span class="mf"&gt;2.4.0&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;yarn&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;hive&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;with&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tachyon&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;tgz&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;skip&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;java&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;If you choose prebuild package with the right hadoop version, you needn't build it by yourself.   &lt;/p&gt;
&lt;p&gt;如果你选择了已经build好的安装包，以上步骤不需执行。&lt;/p&gt;
&lt;p&gt;将自己编译或是下载的编译包解压缩，并配置环境变量：&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;tar&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;zxf&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;1.0.0&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;2.2.0&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;tgz&lt;/span&gt;
&lt;span class="n"&gt;vi&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
    &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;SCALA_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;  
    &lt;span class="n"&gt;export&lt;/span&gt; &lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SCALA_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SCALA_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;
&lt;span class="n"&gt;source&lt;/span&gt; &lt;span class="o"&gt;~/&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;bashrc&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Configure Spark cluster - Spark集群配置&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;edit &lt;code&gt;$SPARK_HOME/conf/slaves&lt;/code&gt;, and input all node IP :  &lt;/p&gt;
&lt;p&gt;masters&lt;br /&gt;
slave1&lt;br /&gt;
slave2&lt;br /&gt;
slave3 &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;create and edit &lt;code&gt;$SPARK_HOME/conf/spark_env.sh&lt;/code&gt; &lt;/p&gt;
&lt;p&gt;export HADOOP_HOME=/opt/apache/hadoop-2.4.0&lt;br /&gt;
export HADOOP_CONF_DIR=/opt/apache/hadoop-2.4.0/etc/hadoop&lt;br /&gt;
export JAVA_HOME=/usr/local/jdk1.7.0_60&lt;br /&gt;
export SCALA_HOME=/home/yarn/scala-2.10.4  &lt;/p&gt;
&lt;p&gt;export SPARK_WORKER_MEMORY=16g&lt;br /&gt;
export SPARK_WORKER_INSTANCES=1&lt;br /&gt;
export SPARK_MASTER_IP=master&lt;/p&gt;
&lt;p&gt;实际上安装好之后&lt;code&gt;conf&lt;/code&gt;文件夹下有一个&lt;code&gt;spark_env.sh&lt;/code&gt;的模板，里边有各个变量的解释说明，在这不一一累述  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy to other node &lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;要将各个节点上的这两个文件都进行配置&lt;/p&gt;
&lt;h3&gt;Configure Spark App - Spark作业属性配置&lt;/h3&gt;
&lt;p&gt;对于作业执行的属性配置，spark提供了三种不同的配置方法  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;create and edit &lt;code&gt;$SPARK_HOME/conf/spark_default.conf&lt;/code&gt;  &lt;/p&gt;
&lt;p&gt;spark.master                    spark://master:7077&lt;br /&gt;
spark.eventLog.enabled          true&lt;br /&gt;
spark.eventLog.dir              hdfs://master:8020/sparklog&lt;br /&gt;
spark.local.dir                  ...  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在通过$SPARK_HOME/bin/spark-submit这个脚本提交作业时，通过 &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SPARK_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;bin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;submit&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="c1"&gt;//master:7077  /&lt;/span&gt;
&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;conf&lt;/span&gt; &lt;span class="n"&gt;spark&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;eventLog&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;enabled&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt; &lt;span class="p"&gt;...&lt;/span&gt;  &lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="o"&gt;***&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;jar&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;通过代码中对SparkContext来对这些属性赋值&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这三种方法的优先级是：&lt;br /&gt;
    3 高于 2 高于1  &lt;/p&gt;
&lt;h3&gt;Tips&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;If you change SPARK_WORKER_INSTANCES, CHECK worker's process in every node&lt;br /&gt;
If old worker's process is still working , you can use this command to kill them:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="n"&gt;ps&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ef&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="n"&gt;Worker&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt; &lt;span class="n"&gt;grep&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;cut&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="n"&gt;xargs&lt;/span&gt; &lt;span class="n"&gt;kill&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="mi"&gt;9&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and restart Spark Cluster  &lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;if you want to start history server, you should assign logs' path:  &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SPARK_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;sbin&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;historyserver&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sh&lt;/span&gt;  &lt;span class="err"&gt;$&lt;/span&gt;&lt;span class="n"&gt;SPARK_HOME&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;logs&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you wanna save a job's log, you should assign two properties:  &lt;/p&gt;
&lt;p&gt;spark.eventLog.enabled          true&lt;br /&gt;
spark.eventLog.dir              hdfs://master:8020/sparklog  &lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">guozhongxin</dc:creator><pubDate>Fri, 26 Sep 2014 23:00:00 +0800</pubDate><guid>tag:www.guozhongxin.com,2014-09-26:pages/2014/09/26/spark_installation.html</guid><category>spark</category><category>开发环境</category><category></category></item></channel></rss>